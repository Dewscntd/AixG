import { Injectable, Logger } from '@nestjs/common';\nimport { CreateTeamCommand } from '../../application/commands/create-team.command';\n\n@Injectable()\nexport class TeamValidationService {\n  private readonly logger = new Logger(TeamValidationService.name);\n\n  async validateTeamCreation(command: CreateTeamCommand): Promise<void> {\n    this.logger.log(`Validating team creation: ${command.name}`);\n\n    const errors: string[] = [];\n\n    // Validate required fields\n    if (!command.name || command.name.trim().length === 0) {\n      errors.push('Team name is required');\n    }\n\n    // Validate name length and format\n    if (command.name && command.name.length < 2) {\n      errors.push('Team name must be at least 2 characters long');\n    }\n\n    if (command.name && command.name.length > 100) {\n      errors.push('Team name cannot exceed 100 characters');\n    }\n\n    // Validate short name\n    if (command.shortName && command.shortName.length > 10) {\n      errors.push('Team short name cannot exceed 10 characters');\n    }\n\n    // Validate colors\n    if (command.colors?.primary) {\n      if (!this.isValidHexColor(command.colors.primary)) {\n        errors.push('Primary color must be a valid hex color (e.g., #FF0000)');\n      }\n    }\n\n    if (command.colors?.secondary) {\n      if (!this.isValidHexColor(command.colors.secondary)) {\n        errors.push('Secondary color must be a valid hex color (e.g., #00FF00)');\n      }\n    }\n\n    // Validate founded year\n    if (command.foundedYear) {\n      const currentYear = new Date().getFullYear();\n      if (command.foundedYear < 1800 || command.foundedYear > currentYear) {\n        errors.push(`Founded year must be between 1800 and ${currentYear}`);\n      }\n    }\n\n    // Validate website URL\n    if (command.website) {\n      if (!this.isValidUrl(command.website)) {\n        errors.push('Website must be a valid URL');\n      }\n    }\n\n    // Validate social media URLs\n    if (command.socialMedia) {\n      if (command.socialMedia.facebook && !this.isValidUrl(command.socialMedia.facebook)) {\n        errors.push('Facebook URL must be a valid URL');\n      }\n      if (command.socialMedia.twitter && !this.isValidUrl(command.socialMedia.twitter)) {\n        errors.push('Twitter URL must be a valid URL');\n      }\n      if (command.socialMedia.instagram && !this.isValidUrl(command.socialMedia.instagram)) {\n        errors.push('Instagram URL must be a valid URL');\n      }\n    }\n\n    // Validate logo URL\n    if (command.logo && !this.isValidUrl(command.logo)) {\n      errors.push('Logo must be a valid URL');\n    }\n\n    if (errors.length > 0) {\n      throw new Error(`Team validation failed: ${errors.join(', ')}`);\n    }\n\n    this.logger.log(`Team validation passed: ${command.name}`);\n  }\n\n  private isValidHexColor(color: string): boolean {\n    const hexColorRegex = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    return hexColorRegex.test(color);\n  }\n\n  private isValidUrl(url: string): boolean {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}